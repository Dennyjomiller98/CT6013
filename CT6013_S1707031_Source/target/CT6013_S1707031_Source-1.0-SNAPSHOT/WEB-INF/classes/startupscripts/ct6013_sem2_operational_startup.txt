DROP TABLE CT6013_STUDENTS CASCADE CONSTRAINTS;
CREATE TABLE CT6013_STUDENTS
(
  STUDENT_ID VARCHAR2(10) NOT NULL
, EMAIL VARCHAR2(100) NOT NULL
, PWORD VARCHAR2(255) NOT NULL
, FIRSTNAME VARCHAR2(50) NOT NULL
, SURNAME VARCHAR2(50) NOT NULL
, DOB DATE NOT NULL
, ADDRESS VARCHAR2(255) NOT NULL
, IS_INTERNATIONAL VARCHAR2(5) NOT NULL
, CONSTRAINT CT6013_STUDENTS_PK PRIMARY KEY
  (
    STUDENT_ID
  )
  ENABLE
);

COMMENT ON COLUMN CT6013_STUDENTS.ADDRESS IS 'CSV split ("line1,line2,postcode") etc';


DROP TABLE CT6013_DIM_STUDENTS CASCADE CONSTRAINTS;
CREATE TABLE CT6013_DIM_STUDENTS
(
  DIMENSION_ID NUMBER NOT NULL
, STUDENT_ID VARCHAR2(10) NOT NULL
, DATE_EFFECTIVE DATE NOT NULL
, DATE_EXPIRED DATE
, IS_CURRENT VARCHAR2(5) NOT NULL
, EMAIL VARCHAR2(100) NOT NULL
, PWORD VARCHAR2(255) NOT NULL
, FIRSTNAME VARCHAR2(50) NOT NULL
, SURNAME VARCHAR2(50) NOT NULL
, DOB DATE NOT NULL
, ADDRESS VARCHAR2(255)
, IS_INTERNATIONAL VARCHAR2(5) NOT NULL
, CONSTRAINT CT6013_DIM_STUDENTS_PK PRIMARY KEY
  (
    DIMENSION_ID
  )
  ENABLE
);

COMMENT ON COLUMN CT6013_DIM_STUDENTS.ADDRESS IS 'CSV split ("line1,line2,postcode") etc';

CREATE SEQUENCE CT6013_DIM_STUDENTS_SEQ1;

CREATE TRIGGER CT6013_DIM_STUDENTS_TRG
BEFORE INSERT ON CT6013_DIM_STUDENTS
FOR EACH ROW
BEGIN
  <<COLUMN_SEQUENCES>>
  BEGIN
    IF INSERTING AND :NEW.DIMENSION_ID IS NULL THEN
      SELECT CT6013_DIM_STUDENTS_SEQ1.NEXTVAL INTO :NEW.DIMENSION_ID FROM SYS.DUAL;
    END IF;
  END COLUMN_SEQUENCES;
END;
/


DROP TABLE CT6013_ENROLLMENTS CASCADE CONSTRAINTS;
CREATE TABLE CT6013_ENROLLMENTS
(
  ENROLLMENT_ID NUMBER NOT NULL
, STUDENT_ID VARCHAR2(10) NOT NULL
, IS_ENROLLED VARCHAR2(5) NOT NULL
, HAS_DROPPED VARCHAR2(5) NOT NULL
, LEVEL NUMBER
, COURSE_ID NUMBER
, ENROLLMENT_DATE DATE
, CONSTRAINT CT6013_ENROLLMENTS_PK PRIMARY KEY
  (
    ENROLLMENT_ID
  )
  ENABLE
);

CREATE SEQUENCE CT6013_ENROLLMENTS_SEQ;

CREATE TRIGGER CT6013_ENROLLMENTS_TRG
BEFORE INSERT ON CT6013_ENROLLMENTS
FOR EACH ROW
BEGIN
  <<COLUMN_SEQUENCES>>
  BEGIN
    IF INSERTING AND :NEW.ENROLLMENT_ID IS NULL THEN
      SELECT CT6013_ENROLLMENTS_SEQ.NEXTVAL INTO :NEW.ENROLLMENT_ID FROM SYS.DUAL;
    END IF;
  END COLUMN_SEQUENCES;
END;
/


DROP TABLE CT6013_DIM_ENROLLMENTS CASCADE CONSTRAINTS;
CREATE TABLE CT6013_DIM_ENROLLMENTS
(
  DIMENSION_ID NUMBER NOT NULL
, ENROLLMENT_ID NUMBER NOT NULL
, DATE_EFFECTIVE DATE NOT NULL
, DATE_EXPIRED DATE
, IS_CURRENT VARCHAR2(5) NOT NULL
, STUDENT_ID VARCHAR2(10) NOT NULL
, IS_ENROLLED VARCHAR2(5) NOT NULL
, HAS_DROPPED VARCHAR2(5) NOT NULL
, LEVEL NUMBER
, COURSE_ID NUMBER
, ENROLLMENT_DATE DATE
, CONSTRAINT CT6013_DIM_ENROLLMENTS_PK PRIMARY KEY
  (
    DIMENSION_ID
  )
  ENABLE
);

CREATE SEQUENCE CT6013_DIM_ENROLLMENTS_SEQ;

CREATE TRIGGER CT6013_DIM_ENROLLMENTS_TRG
BEFORE INSERT ON CT6013_DIM_ENROLLMENTS
FOR EACH ROW
BEGIN
  <<COLUMN_SEQUENCES>>
  BEGIN
    IF INSERTING AND :NEW.DIMENSION_ID IS NULL THEN
      SELECT CT6013_DIM_ENROLLMENTS_SEQ.NEXTVAL INTO :NEW.DIMENSION_ID FROM SYS.DUAL;
    END IF;
  END COLUMN_SEQUENCES;
END;
/

DROP TABLE CT6013_COURSES CASCADE CONSTRAINTS;
CREATE TABLE CT6013_COURSES
(
  COURSE_ID VARCHAR2(10) NOT NULL
, SUBJECT_ID NUMBER NOT NULL
, COURSE_NAME VARCHAR2(50) NOT NULL
, MODULE_IDS VARCHAR2(255)
, COURSE_TUTOR NUMBER NOT NULL
, CONSTRAINT CT6013_COURSES_PK PRIMARY KEY
  (
    COURSE_ID
  )
  ENABLE
);

COMMENT ON COLUMN CT6013_COURSES.MODULE_IDS IS 'Csv Split';


DROP TABLE CT6013_DIM_COURSES CASCADE CONSTRAINTS;
CREATE TABLE CT6013_DIM_COURSES
(
  DIMENSION_ID NUMBER NOT NULL
, COURSE_ID VARCHAR2(10) NOT NULL
, DATE_EFFECTIVE DATE NOT NULL
, DATE_EXPIRED VARCHAR2(20)
, IS_CURRENT VARCHAR2(5) NOT NULL
, COURSE_NAME VARCHAR2(50) NOT NULL
, SUBJECT_ID NUMBER NOT NULL
, MODULE_IDS VARCHAR2(255)
, COURSE_TUTOR NUMBER NOT NULL
, CONSTRAINT CT6013_DIM_COURSES_PK PRIMARY KEY
  (
    DIMENSION_ID
  )
  ENABLE
);

CREATE SEQUENCE CT6013_DIM_COURSES_SEQ;

CREATE TRIGGER CT6013_DIM_COURSES_TRG
BEFORE INSERT ON CT6013_DIM_COURSES
FOR EACH ROW
BEGIN
  <<COLUMN_SEQUENCES>>
  BEGIN
    IF INSERTING AND :NEW.DIMENSION_ID IS NULL THEN
      SELECT CT6013_DIM_COURSES_SEQ.NEXTVAL INTO :NEW.DIMENSION_ID FROM SYS.DUAL;
    END IF;
  END COLUMN_SEQUENCES;
END;
/


DROP TABLE CT6013_SUBJECTS CASCADE CONSTRAINTS
CREATE TABLE CT6013_SUBJECTS
(
  SUBJECT_ID NUMBER NOT NULL
, SUBJECT_NAME VARCHAR2(50) NOT NULL
, SUBJECT_COURSES VARCHAR2(255) NOT NULL
, CONSTRAINT CT6013_SUBJECTS_PK PRIMARY KEY
  (
    SUBJECT_ID
  )
  ENABLE
);

COMMENT ON COLUMN CT6013_SUBJECTS.SUBJECT_COURSES IS 'Csv split';

CREATE SEQUENCE CT6013_SUBJECTS_SEQ;

CREATE TRIGGER CT6013_SUBJECTS_TRG
BEFORE INSERT ON CT6013_SUBJECTS
FOR EACH ROW
BEGIN
  <<COLUMN_SEQUENCES>>
  BEGIN
    IF INSERTING AND :NEW.SUBJECT_ID IS NULL THEN
      SELECT CT6013_SUBJECTS_SEQ.NEXTVAL INTO :NEW.SUBJECT_ID FROM SYS.DUAL;
    END IF;
  END COLUMN_SEQUENCES;
END;
/

DROP TABLE CT6013_DIM_SUBJECTS CASCADE CONSTRAINTS
CREATE TABLE CT6013_DIM_SUBJECTS
(
  DIMENSION_ID NUMBER NOT NULL
, SUBJECT_ID NUMBER NOT NULL
, DATE_EFFECTIVE DATE NOT NULL
, DATE_EXPIRED DATE
, IS_CURRENT VARCHAR2(5) NOT NULL
, SUBJECT_NAME VARCHAR2(50) NOT NULL
, SUBJECT_COURSES VARCHAR2(255) NOT NULL
, CONSTRAINT CT6013_DIM_SUBJECTS_PK PRIMARY KEY
  (
    DIMENSION_ID
  )
  ENABLE
);

CREATE SEQUENCE CT6013_DIM_SUBJECTS_SEQ;

CREATE TRIGGER CT6013_DIM_SUBJECTS_TRG
BEFORE INSERT ON CT6013_DIM_SUBJECTS
FOR EACH ROW
BEGIN
  <<COLUMN_SEQUENCES>>
  BEGIN
    IF INSERTING AND :NEW.DIMENSION_ID IS NULL THEN
      SELECT CT6013_DIM_SUBJECTS_SEQ.NEXTVAL INTO :NEW.DIMENSION_ID FROM SYS.DUAL;
    END IF;
  END COLUMN_SEQUENCES;
END;
/


DROP TABLE CT6013_MODULES CASCADE CONSTRAINTS
CREATE TABLE CT6013_MODULES
(
  MODULE_ID VARCHAR2(10) NOT NULL
, MODULE_NAME VARCHAR2(50) NOT NULL
, MODULE_TUTOR NUMBER NOT NULL
, MODULE_LEVEL NUMBER NOT NULL
, SEMESTER_LENGTH NUMBER NOT NULL
, SEMESTER NUMBER
, CATS NUMBER NOT NULL
);

COMMENT ON COLUMN CT6013_MODULES.SEMESTER IS '(Semester 1 if module is in 1st Semester, Semester 2 if module is in 2nd Semester, empty if it''s a 2 Semester module)';


DROP TABLE CT6013_DIM_MODULES CASCADE CONSTRAINTS
CREATE TABLE CT6013_DIM_MODULES
(
  DIMENSION_ID NUMBER NOT NULL
, MODULE_ID VARCHAR2(10) NOT NULL
, DATE_EFFECTIVE VARCHAR2(20) NOT NULL
, DATE_EXPIRED NUMBER
, IS_CURRENT VARCHAR2(5) NOT NULL
, MODULE_NAME VARCHAR2(50) NOT NULL
, MODULE_TUTOR NUMBER NOT NULL
, MODULE_LEVEL NUMBER NOT NULL
, SEMESTER_LENGTH NUMBER NOT NULL
, SEMESTER NUMBER
, CATS NUMBER NOT NULL
, CONSTRAINT CT6013_DIM_MODULES_PK PRIMARY KEY
  (
    DIMENSION_ID
  )
  ENABLE
);

CREATE SEQUENCE CT6013_DIM_MODULES_SEQ;

CREATE TRIGGER CT6013_DIM_MODULES_TRG
BEFORE INSERT ON CT6013_DIM_MODULES
FOR EACH ROW
BEGIN
  <<COLUMN_SEQUENCES>>
  BEGIN
    IF INSERTING AND :NEW.DIMENSION_ID IS NULL THEN
      SELECT CT6013_DIM_MODULES_SEQ.NEXTVAL INTO :NEW.DIMENSION_ID FROM SYS.DUAL;
    END IF;
  END COLUMN_SEQUENCES;
END;
/


DROP TABLE CT6013_TUTORS CASCADE CONSTRAINTS
CREATE TABLE CT6013_TUTORS
(
  TUTOR_ID NUMBER NOT NULL
, FIRSTNAME VARCHAR2(50) NOT NULL
, SURNAME VARCHAR2(50) NOT NULL
, EMAIL VARCHAR2(100) NOT NULL
, DOB DATE NOT NULL
, ADDRESS VARCHAR2(255) NOT NULL
, PWORD VARCHAR2(255) NOT NULL
, CONSTRAINT CT6013_TUTORS_PK PRIMARY KEY
  (
    TUTOR_ID
  )
  ENABLE
);

COMMENT ON COLUMN CT6013_TUTORS.ADDRESS IS 'CSV Split';

CREATE SEQUENCE CT6013_TUTORS_SEQ;

CREATE TRIGGER CT6013_TUTORS_TRG
BEFORE INSERT ON CT6013_TUTORS
FOR EACH ROW
BEGIN
  <<COLUMN_SEQUENCES>>
  BEGIN
    IF INSERTING AND :NEW.TUTOR_ID IS NULL THEN
      SELECT CT6013_TUTORS_SEQ.NEXTVAL INTO :NEW.TUTOR_ID FROM SYS.DUAL;
    END IF;
  END COLUMN_SEQUENCES;
END;
/


DROP TABLE CT6013_DIM_TUTORS CASCADE CONSTRAINTS
CREATE TABLE CT6013_DIM_TUTORS
(
  DIMENSION_ID NUMBER NOT NULL
, TUTOR_ID NUMBER NOT NULL
, DATE_EFFECTIVE DATE NOT NULL
, DATE_EXPIRED DATE
, IS_CURRENT VARCHAR2(5) NOT NULL
, FIRSTNAME VARCHAR2(50) NOT NULL
, SURNAME VARCHAR2(50) NOT NULL
, EMAIL VARCHAR2(100) NOT NULL
, DOB DATE NOT NULL
, ADDRESS VARCHAR2(255) NOT NULL
, PWORD VARCHAR2(255) NOT NULL
, CONSTRAINT CT6013_DIM_TUTORS_PK PRIMARY KEY
  (
    DIMENSION_ID
  )
  ENABLE
);

CREATE SEQUENCE CT6013_DIM_TUTORS_SEQ;

CREATE TRIGGER CT6013_DIM_TUTORS_TRG
BEFORE INSERT ON CT6013_DIM_TUTORS
FOR EACH ROW
BEGIN
  <<COLUMN_SEQUENCES>>
  BEGIN
    IF INSERTING AND :NEW.DIMENSION_ID IS NULL THEN
      SELECT CT6013_DIM_TUTORS_SEQ.NEXTVAL INTO :NEW.DIMENSION_ID FROM SYS.DUAL;
    END IF;
  END COLUMN_SEQUENCES;
END;
/


DROP TABLE CT6013_ASSIGNMENTS CASCADE CONSTRAINTS
CREATE TABLE CT6013_ASSIGNMENTS
(
  ASSIGNMENT_ID NUMBER NOT NULL
, STUDENT_ID VARCHAR2(10) NOT NULL
, ACADEMIC_YEAR NUMBER NOT NULL
, MODULE NUMBER NOT NULL
, SEMESTER NUMBER NOT NULL
, GRADE NUMBER NOT NULL
, RESIT VARCHAR2(5) NOT NULL
, RESIT_GRADE NUMBER
, INTERNATIONAL VARCHAR2(5) NOT NULL
, CONSTRAINT CT6013_ASSIGNMENTS_PK PRIMARY KEY
  (
    ASSIGNMENT_ID
  )
  ENABLE
);

CREATE SEQUENCE CT6013_ASSIGNMENTS_SEQ;

CREATE TRIGGER CT6013_ASSIGNMENTS_TRG
BEFORE INSERT ON CT6013_ASSIGNMENTS
FOR EACH ROW
BEGIN
  <<COLUMN_SEQUENCES>>
  BEGIN
    IF INSERTING AND :NEW.ASSIGNMENT_ID IS NULL THEN
      SELECT CT6013_ASSIGNMENTS_SEQ.NEXTVAL INTO :NEW.ASSIGNMENT_ID FROM SYS.DUAL;
    END IF;
  END COLUMN_SEQUENCES;
END;
/
